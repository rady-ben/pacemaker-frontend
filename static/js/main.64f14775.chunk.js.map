{"version":3,"sources":["store/Store.js","store/reducer.js","component/Header.js","component/ListItem.js","component/Drawer.js","constant/ui.js","component/Question/ResponseProposition.js","component/Modal.js","component/Question/Question.js","config/api.js","routes/home.js","App.js","reportWebVitals.js","index.js"],"names":["Store","React","createContext","displayName","useStore","useContext","StoreProvider","children","initialState","reducer","useReducer","globalState","dispatch","Provider","value","SET_MODULES","modules","useStyles","makeStyles","theme","menuButton","marginRight","spacing","breakpoints","up","display","title","flexGrow","textAlign","Header","drawerOpen","toggleDrawer","classes","AppBar","Toolbar","IconButton","edge","className","color","aria-label","onClick","Typography","variant","Button","nested","paddingLeft","listItemText","props","selected","palette","primary","dark","fontWeight","typography","fontWeightBold","CustomItem","name","courseId","index","moduleId","useParams","moduleIdUrl","courseIdUrl","JSON","stringify","to","style","textDecoration","button","ListItemIcon","ListItemText","ListItem","item","useState","open","setOpen","MenuBookRounded","ExpandLess","ExpandMore","id","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","courses","map","course","drawerPaper","width","toolbar","mixins","Drawer","listItems","Hidden","mdDown","paper","Divider","mdUp","onClose","container","backgroundColor","status","success","light","error","label","main","iconError","red","iconSuccess","green","GreenCheckbox","withStyles","root","checked","Checkbox","RedCheckbox","ResponseProposition","handleCheckProposition","handleClick","CustomCheckBox","onChange","FormControlLabel","control","CustomDialogTitle","margin","padding","titleText","maxWidth","closeButton","position","right","top","grey","DialogTitle","disableTypography","CustomModal","showSynthesis","toggleModal","modalTitle","modalContent","Dialog","aria-labelledby","aria-describedby","DialogContent","DialogContentText","marginTop","marginBottom","marginLeft","divider","note","synthesisButton","height","paddingRight","borderRadius","synthesisButtonText","textTransform","modalContainer","paddingTop","paddingBottom","maxHeight","background","left","transform","overflow","Question","validated","setValidated","setShowSynthesis","synthesis","setSynthesis","questions","setQuestions","question","setQuestion","questionIndex","setQuestionIndex","propositions","setPropositions","URL","QUESTIONS_API","questionsString","propositionsString","useEffect","fetch","then","response","json","data","tab","proposition","content","is_correct","catch","console","log","Paper","Box","flexDirection","justifyContent","startIcon","valide","find","_","isEmpty","validateResponses","Alert","severity","comment","rows","placeholder","m","p","bgcolor","ButtonGroup","disabled","length","Home","useLocation","pathname","App","type","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","state","action","document","getElementById"],"mappings":"+PAEMA,EAAQC,IAAMC,gBACpBF,EAAMG,YAAc,QAEb,IAAMC,EAAW,kBAAMH,IAAMI,WAAWL,IAElCM,EAAgB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QAAc,EACpCR,IAAMS,WAAWD,EAASD,GADU,mBAC7DG,EAD6D,KAChDC,EADgD,KAEpE,OACE,cAACZ,EAAMa,SAAP,CACIC,MAAO,CAACH,EAAaC,GADzB,SAGKL,K,gBCbIQ,EAAc,cAEdP,EAAe,CAC1BQ,QAAS,I,uFCOLC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,WAAW,aACPC,YAAaF,EAAMG,QAAQ,IAC1BH,EAAMI,YAAYC,GAAG,MAAQ,CAC1BC,QAAS,SAGjBC,MAAO,CACHC,SAAU,EACVC,UAAW,cAgCJC,EA5BA,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,aACnBC,EAAUf,IAMhB,OACI,cAACgB,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,KAAK,QACLC,UAAWL,EAAQZ,WACnBkB,MAAM,UACNC,aAAW,OACXC,QAZU,WACtBT,GAAcD,IAMN,SAOI,cAAC,IAAD,MAEJ,cAACW,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWL,EAAQN,MAA5C,2BAGA,cAACiB,EAAA,EAAD,CAAQL,MAAM,UAAd,kC,oHC3BVrB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyB,OAAQ,CACJC,YAAa1B,EAAMG,QAAQ,IAE/BwB,aAAc,CACVR,MAAO,SAAAS,GAAK,OAAKA,EAAMC,SAAW7B,EAAM8B,QAAQC,QAAQC,KAAO,QAC/D,gBAAiB,CACbC,WAAY,SAAAL,GAAK,OAAKA,EAAMC,SAAW7B,EAAMkC,WAAWC,eAAiB,YAK/EC,EAAa,SAAC,GAKb,IAJHC,EAIE,EAJFA,KAEAC,GAEE,EAHFC,MAGE,EAFFD,UACAE,EACE,EADFA,SACE,EACuDC,cAAvCC,EADhB,EACMF,SAAiCG,EADvC,EAC6BL,SACzBT,EAAYe,KAAKC,UAAUL,KAAYE,GAAeE,KAAKC,UAAUP,KAAYK,EACjF9B,EAAUf,EAAU,CAAC+B,aAE3B,OACI,cAAC,IAAD,CAAMiB,GAAE,WAAMN,EAAN,YAAkBF,GAAaS,MAAO,CAACC,eAAe,QAA9D,SACI,eAAC,IAAD,CACIC,QAAM,EACN/B,UAAWL,EAAQY,OAFvB,UAII,cAACyB,EAAA,EAAD,UACI,cAAC,IAAD,CAAkB/B,MAAOU,EAAW,UAAY,cAEpD,cAACsB,EAAA,EAAD,CACIpB,QAASM,EACTnB,UAAWL,EAAQc,qBA0CxByB,EAnCE,SAAC,GAAY,IAAD,EAAVC,EAAU,EAAVA,KAAU,EACDC,oBAAS,GADR,mBAClBC,EADkB,KACZC,EADY,KAMzB,OACI,qCACI,eAAC,IAAD,CACIP,QAAM,EAEN5B,QATQ,WAChBmC,GAASD,IAKL,UAKI,cAACL,EAAA,EAAD,UAAc,cAACO,EAAA,EAAD,MACd,cAACN,EAAA,EAAD,CAAcpB,QAAO,OAAEsB,QAAF,IAAEA,OAAF,EAAEA,EAAMhB,OAC5BkB,EAAO,cAACG,EAAA,EAAD,IAAiB,cAACC,EAAA,EAAD,MAP7B,OAESN,QAFT,IAESA,OAFT,EAESA,EAAMO,IAOf,cAACC,EAAA,EAAD,CAAUC,GAAIP,EAAMQ,QAAQ,OAAOC,eAAa,EAAhD,SACI,cAACC,EAAA,EAAD,CAAMC,UAAU,MAAMC,gBAAc,EAApC,gBAEQd,QAFR,IAEQA,GAFR,UAEQA,EAAMe,eAFd,aAEQ,EAAeC,KAAI,SAACC,EAAQ/B,GAAT,OACf,cAAC,EAAD,CACIF,KAAMiC,EAAOjC,KACbC,SAAUgC,EAAOV,GACjBrB,MAAOA,EACPC,SAAQ,OAAEa,QAAF,IAAEA,OAAF,EAAEA,EAAMO,gBCvE1C9D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuE,YAAa,CACTC,MCdoB,KDgBxBC,QAASzE,EAAM0E,OAAOD,YAoDXE,EAjDA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,UAAWjE,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAC/BC,EAAUf,IAIhB,OACI,qCACI,cAAC+E,EAAA,EAAD,CACIC,QAAM,EADV,SAGI,eAAC,IAAD,CACIvD,QAAQ,YACRV,QAAS,CACLkE,MAAOlE,EAAQ0D,aAHvB,UAMI,qBAAKrD,UAAWL,EAAQ4D,UACxB,cAACO,EAAA,EAAD,IACA,cAACf,EAAA,EAAD,UACKW,EAAUP,KAAI,SAAChB,GAAD,OACX,cAAC,EAAD,CAAUA,KAAMA,cAKhC,cAACwB,EAAA,EAAD,CACII,MAAI,EADR,SAGI,eAAC,IAAD,CACI1D,QAAQ,YACRV,QAAS,CACLkE,MAAOlE,EAAQ0D,aAEnBhB,KAAM5C,EACNuE,QAhCU,WACtBtE,GAAcD,IAyBN,UAQI,qBAAKO,UAAWL,EAAQ4D,UACxB,cAACO,EAAA,EAAD,IACA,cAACf,EAAA,EAAD,UACKW,EAAUP,KAAI,SAAChB,GAAD,OACX,cAAC,EAAD,CAAUA,KAAMA,kB,oHEnDtCvD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmF,UAAW,CACPC,gBAAiB,SAAAxD,GAAK,MAAoB,YAAjBA,EAAMyD,OAAuBrF,EAAM8B,QAAQwD,QAAQC,MAC1D,UAAjB3D,EAAMyD,OAAqBrF,EAAM8B,QAAQ0D,MAAMD,MAAQ,MACxDf,MAAO,QAEXiB,MAAO,CACHtE,MAAO,SAAAS,GAAK,MAAoB,YAAjBA,EAAMyD,OAAuBrF,EAAM8B,QAAQwD,QAAQI,KAChD,UAAjB9D,EAAMyD,OAAqBrF,EAAM8B,QAAQ0D,MAAME,KAAO,OAE3DC,UAAW,CACPzF,YAAaF,EAAMG,QAAQ,GAC3BgB,MAAOyE,KAAI,MAEfC,YAAa,CACT3F,YAAaF,EAAMG,QAAQ,GAC3BgB,MAAO2E,KAAM,UAIfC,GAAgBC,aAAW,CAC7BC,KAAM,CACJ9E,MAAO2E,KAAM,KACb,YAAa,CACX3E,MAAO2E,KAAM,OAGjBI,QAAS,IAPSF,EAQnB,SAACpE,GAAD,OAAW,cAACuE,GAAA,EAAD,aAAUhF,MAAM,WAAcS,OAEtCwE,GAAcJ,aAAW,CAC3BC,KAAM,CACJ9E,MAAOyE,KAAI,KACX,YAAa,CACXzE,MAAOyE,KAAI,OAGfM,QAAS,IAPOF,EAQjB,SAACpE,GAAD,OAAW,cAACuE,GAAA,EAAD,aAAUhF,MAAM,WAAcS,OAmC7ByE,GAhCa,SAAC,GAA+D,IAA7DZ,EAA4D,EAA5DA,MAAOJ,EAAqD,EAArDA,OAAQ9C,EAA6C,EAA7CA,MAAO2D,EAAsC,EAAtCA,QAASI,EAA6B,EAA7BA,uBACpDzF,EAAUf,GAAU,CAACuF,WACrBkB,EAAc,WAChBD,EAAuB,CACnBJ,SAASA,EACT3D,WAIFiE,EAA4B,YAAXnB,EAAuB,cAACU,GAAD,CAC1CG,QAASA,EACTO,SAAUF,IAEI,UAAXlB,EAAqB,cAACe,GAAD,CACpBF,QAASA,EACThF,UAAWL,EAAQ8E,YAClB,cAACQ,GAAA,EAAD,CACDD,QAASA,EACTO,SAAUF,EACVpF,MAAM,YAGd,OACI,cAACuF,GAAA,EAAD,CACIC,QACIH,EAEJf,MAAO,cAACnE,EAAA,EAAD,CAAYJ,UAAWL,EAAQ4E,MAA/B,SAAuCA,O,4DCjDpDmB,GAAoBZ,cAhBX,SAAChG,GAAD,MAAY,CACvBiG,KAAM,CACFY,OAAQ,EACRC,QAAS9G,EAAMG,QAAQ,IAE3B4G,UAAW,CACPC,SAAU,OAEdC,YAAa,CACTC,SAAU,WACVC,MAAOnH,EAAMG,QAAQ,GACrBiH,IAAKpH,EAAMG,QAAQ,GACnBgB,MAAOnB,EAAM8B,QAAQuF,KAAK,SAIRrB,EAAmB,SAACpE,GAAW,IAC7CxC,EAA+BwC,EAA/BxC,SAAUyB,EAAqBe,EAArBf,QAASqE,EAAYtD,EAAZsD,QAC3B,OACI,eAACoC,GAAA,EAAD,CAAaC,mBAAiB,EAACrG,UAAWL,EAAQoF,KAAlD,UACI,cAAC3E,EAAA,EAAD,CACIC,QAAQ,KACRL,UAAWL,EAAQkG,UAFvB,SAIK3H,IAEL,cAAC4B,EAAA,EAAD,CAAYI,aAAW,QAAQF,UAAWL,EAAQoG,YAAa5F,QAAS6D,EAAxE,SACI,cAAC,KAAD,YAkCDsC,GA5BK,SAAC,GAKd,IAJHC,EAIE,EAJFA,cACAC,EAGE,EAHFA,YACAC,EAEE,EAFFA,WACAC,EACE,EADFA,aAGA,OACI,eAACC,GAAA,EAAD,CACItE,KAAMkE,EACNvC,QAASwC,EACTI,kBAAgB,qBAChBC,mBAAiB,2BAJrB,UAMI,cAACnB,GAAD,CACIhD,GAAG,sBACHsB,QAASwC,EAFb,SAIKC,IAEL,cAACK,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAmBrE,GAAG,2BAAtB,SACKgE,UCpCf9H,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrCmF,WAAS,mBACJnF,EAAMI,YAAYC,GAAG,MAAQ,CAC1B6H,UAAWlI,EAAMG,QAAQ,GACzBgI,aAAcnI,EAAMG,QAAQ,GAC5BiI,WAAYpI,EAAMG,QAAQ,GHnCV,IGoChBD,YAAaF,EAAMG,QAAQ,KAL1B,wBAOIH,EAAMG,QAAQ,IAPlB,GASTkI,QAAS,CACLF,aAAcnI,EAAMG,QAAQ,GAC5B+H,UAAWlI,EAAMG,QAAQ,IAE7BsE,QAASzE,EAAM0E,OAAOD,QACtB6D,KAAM,CACF9D,MAAO,OACP0D,UAAWlI,EAAMG,QAAQ,IAE7BoI,gBAAiB,CACbC,OAAQ,GACR9G,YAAa,GACb+G,aAAc,GACdrD,gBAAiBpF,EAAM8B,QAAQuF,KAAK,KACpCqB,aAAc,GAElBC,oBAAqB,CACjBxH,MAAOnB,EAAM8B,QAAQuF,KAAK,KAC1BuB,cAAe,QAEnBC,eAAgB,CACZC,WAAY,GACZC,cAAe,GACfC,UAAW,OACX9B,SAAU,WACV1C,MAAO,MACPY,gBAAiBpF,EAAM8B,QAAQmH,WAAWlE,MAC1C+B,QAAS9G,EAAMG,QAAQ,EAAG,EAAG,GAC7BiH,IAAK,MACL8B,KAAM,MACNC,UAAW,wBACXC,SAAU,YAuLHC,GAnLE,WACb,IAAMxI,EAAUf,KADG,EAEewD,oBAAS,GAFxB,mBAEZgG,EAFY,KAEDC,EAFC,OAGuBjG,oBAAS,GAHhC,mBAGZmE,EAHY,KAGG+B,EAHH,OAIelG,mBAAS,IAJxB,mBAIZmG,EAJY,KAIDC,EAJC,OAKepG,mBAAS,IALxB,mBAKZqG,EALY,KAKDC,EALC,OAMatG,mBAAS,IANtB,mBAMZuG,EANY,KAMFC,EANE,OAOuBxG,mBAAS,GAPhC,mBAOZyG,EAPY,KAOGC,EAPH,OAQqB1G,mBAAS,IAR9B,mBAQZ2G,EARY,KAQEC,EARF,OASGjL,IATH,uBAWYwD,eAAvBD,EAXW,EAWXA,SAAUF,EAXC,EAWDA,SACZ6H,ECtFmB,SAAC,GAAD,IACzB3H,EADyB,EACzBA,SAAUF,EADe,EACfA,SADe,+DAE0BE,EAF1B,mBAE6CF,EAF7C,KDsFb8H,CAAc,CACtB5H,WAAUF,aAEV+H,EAAiB,GACjBC,EAAoB,GAGxBC,qBAAU,WACNC,MAAML,GACDM,MAAK,SAACC,GACH,OAAOA,EAASC,UAEnBF,MAAK,SAACG,GAAU,IAAD,EACZhB,EAAa,YAAIgB,EAAKjB,YACtBU,EAAkBzH,KAAKC,UAAL,YAAmB+H,EAAKjB,YAC1C,IAAMkB,EAAM,mBAAID,QAAJ,IAAIA,GAAJ,UAAIA,EAAMjB,UAAUI,UAApB,aAAI,EAAgCE,cAAc5F,KAC1D,SAACyG,GAAD,mBAAC,eACMA,GADP,IAEIrF,MAAK,OAAEqF,QAAF,IAAEA,OAAF,EAAEA,EAAaC,QACpB1F,QAAmB,OAAXyF,QAAW,IAAXA,OAAA,EAAAA,EAAaE,YAAa,UAAY,QAC9C9E,SAAS,OAGjB4D,EAAY,eAAIc,EAAKjB,UAAUI,KAC/BG,EAAgBW,GAChBnB,EAAY,OAACkB,QAAD,IAACA,OAAD,EAACA,EAAMnB,WACnBa,EAAqB1H,KAAKC,UAAUgI,MAEvCI,OAAM,SAACzF,GACJ0F,QAAQC,IAAI3F,QAErB,CAAChD,EAAUF,EAAU+H,EAAiBC,EAAoBb,EAAWM,EA1BrD,KA6BnB,IAAMrC,EAAc,WAChB8B,GAAkB/B,IAGhBnB,GAAyB,SAAC,GAAwB,IAAtB/D,EAAqB,EAArBA,MAAO2D,EAAc,EAAdA,QACjC2E,EAAMZ,EACVY,EAAItI,GAAO2D,QAAUA,EACrBgE,EAAgB,YAAIW,KAexB,OACI,qCACI,qBAAK3J,UAAWL,EAAQ4D,UACxB,eAAC2G,EAAA,EAAD,CAAOlK,UAAWL,EAAQsE,UAA1B,UACI,eAACkG,EAAA,EAAD,CAAK/K,QAAQ,OAAOgL,cAAc,MAAMC,eAAe,gBAAvD,UACI,cAACjK,EAAA,EAAD,CACIC,QAAQ,KADZ,4BAGiBwI,EAAc,KAE/B,cAACvI,EAAA,EAAD,CACIN,UAAWL,EAAQ0H,gBACnBiD,UAAW,cAAC,KAAD,IACXnK,QAASqG,EAHb,SAKI,cAACpG,EAAA,EAAD,CAAYJ,UAAWL,EAAQ8H,oBAA/B,8BAKR,cAAC3D,EAAA,EAAD,CAAS9D,UAAWL,EAAQwH,UAC5B,cAAC/G,EAAA,EAAD,CAAYC,QAAQ,YAApB,gBAEQsI,QAFR,IAEQA,OAFR,EAEQA,EAAUkB,UAGlB,cAAC/F,EAAA,EAAD,CAAS9D,UAAWL,EAAQwH,UAEvBiB,EApCS,WACtB,IAAMmC,EAASxB,EAAayB,MAAK,SAACZ,GAAD,MACL,YAAvBA,EAAYzF,SAAyByF,EAAY5E,SACvB,UAAvB4E,EAAYzF,QAAsByF,EAAY5E,WAEtD,OAAOyF,IAAEC,QAAQH,GAiCCI,GACI,cAACC,EAAA,EAAD,CAAOC,SAAS,UAAhB,+BACA,cAACD,EAAA,EAAD,CAAOC,SAAS,QAAhB,gCAHJ,KAMV,cAAC9H,EAAA,EAAD,UAEQgG,EAAa5F,KAAI,SAACyG,EAAavI,GAAd,OACb,cAAC,IAAD,UACI,cAAC,GAAD,CACIkD,MAAK,OAAEqF,QAAF,IAAEA,OAAF,EAAEA,EAAarF,MACpBJ,OAAQiE,EAAS,OAAGwB,QAAH,IAAGA,OAAH,EAAGA,EAAazF,OAAS,UAC1Ca,QAAS4E,EAAY5E,QACrB3D,MAAOA,EACP+D,uBAAwBA,GACxB2D,aAAcA,WAMjCX,GAAa,qCACV,cAACtE,EAAA,EAAD,CAAS9D,UAAWL,EAAQwH,UAC5B,cAAC/G,EAAA,EAAD,CACIC,QAAQ,KADZ,yBAKA,cAACD,EAAA,EAAD,CAAYC,QAAQ,YAApB,gBAEQsI,QAFR,IAEQA,OAFR,EAEQA,EAAUmC,UAGlB,0BACI9K,UAAWL,EAAQyH,KACnB2D,KAAM,GACNC,YAAY,2CAMpB,cAAClH,EAAA,EAAD,CAAS9D,UAAWL,EAAQwH,UAC5B,eAACgD,EAAA,EAAD,CAAK/K,QAAQ,OAAOiL,eAAe,gBAAgBY,EAAG,EAAGC,EAAG,EAAGC,QAAQ,mBAAvE,UACI,cAAC7K,EAAA,EAAD,CACID,QAAQ,YACRJ,MAAM,UACNE,QAzFK,WACrBkI,GAAcD,IAqFF,qBAOA,eAACgD,EAAA,EAAD,CAAanL,MAAM,UAAUC,aAAW,gCAAxC,UACI,cAACI,EAAA,EAAD,CACIH,QAAS,WACL2I,EAAiBD,EAAc,IAEnCwC,SAA0B,IAAhBxC,EAJd,uBAQA,cAACvI,EAAA,EAAD,CACIH,QAAS,WACL2I,EAAiBD,EAAc,IAEnCwC,SAAUxC,KAAyB,OAATJ,QAAS,IAATA,OAAA,EAAAA,EAAW6C,QAAO,EAJhD,8BAWZ,cAAC,GAAD,CACI/E,cAAeA,EACfC,YAAaA,EACbC,WA/NG,uBAgOHC,aAAc6B,QElNfgD,OA3Bf,WAAiB,IAKkB,MACgD,MANnE,EACuBnJ,oBAAS,GADhC,mBACL3C,EADK,KACOC,EADP,OAEU3B,IAAfO,EAFK,oBAKZ,MAA0B,MAFTkN,cAEJC,WACM,OAAXnN,QAAW,IAAXA,GAAA,UAAAA,EAAaK,QAAQ,UAArB,eAAyB+D,MAAzB,OAA+BpE,QAA/B,IAA+BA,GAA/B,UAA+BA,EAAaK,QAAQ,UAApD,iBAA+B,EAAyBuE,QAAQ,UAAhE,aAA+B,EAAqCR,IAC7D,cAAC,IAAD,CAAUd,GAAE,iBAAKtD,QAAL,IAAKA,GAAL,UAAKA,EAAaK,QAAQ,UAA1B,aAAK,EAAyB+D,GAA9B,mBAAoCpE,QAApC,IAAoCA,GAApC,UAAoCA,EAAaK,QAAQ,UAAzD,iBAAoC,EAAyBuE,QAAQ,UAArE,aAAoC,EAAqCR,MAKhG,gCACI,cAAC,EAAD,CACIjD,WAAYA,EACZC,aAAcA,IAElB,cAAC,EAAD,CACIgE,UAAWpF,EAAYK,QACvBc,WAAYA,EACZC,aAAcA,IAElB,cAAC,GAAD,QCIGgM,OA7Bf,WAAgB,IAAD,EACQ3N,IAAZQ,EADI,oBAeb,OAbA8K,qBAAU,WACRC,MFXuB,mDEYtBC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLnL,EVVkC,CACtCoN,KAAMjN,EACNC,QUQwB+K,OAErBK,OAAM,SAACzF,GACN0F,QAAQC,IAAI3F,QAEb,IAGD,cAAC,IAAD,CAAesH,SAAUC,sBAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,uBAAZ,SACE,cAAC,GAAD,YClBKC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3C,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAevO,aAAcA,EAAcC,QZAjB,WAAmC,IAAlCuO,EAAiC,uDAAzBxO,EAAcyO,EAAW,uCAC9D,GAAIA,EAAOjB,OAASjN,EAElB,OADAsL,QAAQC,IAAI2C,GACL,2BACFD,GADL,IAEEhO,QAAQ,YAAKiO,EAAOjO,YYLtB,SACE,cAAC,GAAD,QAGJkO,SAASC,eAAe,SAG1Bd,O","file":"static/js/main.64f14775.chunk.js","sourcesContent":["import React from 'react';\n\nconst Store = React.createContext();\nStore.displayName = 'Store';\n\nexport const useStore = () => React.useContext(Store);\n\nexport const StoreProvider = ({ children, initialState, reducer }) => {\n  const [globalState, dispatch] = React.useReducer(reducer, initialState);\n  return (\n    <Store.Provider\n        value={[globalState, dispatch]}\n    >\n        {children}\n    </Store.Provider>\n  );\n};","export const SET_MODULES = 'SET_MODULES';\n\nexport const initialState = {\n  modules: [],\n};\n\nexport const setModules = (modules) => ({\n  type: SET_MODULES,\n  modules,\n});\n\nexport const modulesReducer = (state = initialState, action) => {\n  if (action.type === SET_MODULES) {\n    console.log(action);\n    return {\n      ...state,\n      modules: [...action.modules],\n    };\n  }\n};","import {\n    AppBar,\n    Toolbar,\n    Typography,\n    IconButton,\n    Button\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n    title: {\n        flexGrow: 1,\n        textAlign: 'center'\n    },\n}));\n\nconst Header = ({drawerOpen, toggleDrawer}) => {\n    const classes = useStyles();\n\n    const innerToggleDrawer = () => {\n        toggleDrawer(!drawerOpen)\n    }\n\n    return (\n        <AppBar>\n            <Toolbar>\n                <IconButton \n                    edge=\"start\"\n                    className={classes.menuButton}\n                    color=\"inherit\"\n                    aria-label=\"menu\"\n                    onClick={innerToggleDrawer}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}>\n                    Séries 200\n                </Typography>\n                <Button color=\"inherit\">Déconnecter</Button>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default Header;","import { useState } from 'react';\nimport {\n    ListItem as MuListItem,\n    ListItemIcon,\n    ListItemText,\n    Collapse,\n    List\n} from '@material-ui/core';\nimport { useParams } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from \"react-router-dom\";\nimport {\n    ExpandLess,\n    ExpandMore,\n    MenuBookRounded\n} from '@material-ui/icons'\nimport ListAltSharpIcon from '@material-ui/icons/ListAltSharp';\n\nconst useStyles = makeStyles((theme) => ({\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n    listItemText: {\n        color: props => (props.selected ? theme.palette.primary.dark : '#000'),\n        '& span, & svg': {\n            fontWeight: props => (props.selected ? theme.typography.fontWeightBold : null)\n        }\n    }\n}));\n\nconst CustomItem = ({\n    name,\n    index,\n    courseId,\n    moduleId\n}) => {\n    const { moduleId: moduleIdUrl, courseId: courseIdUrl } = useParams();\n    const selected = (JSON.stringify(moduleId)===moduleIdUrl && JSON.stringify(courseId)===courseIdUrl);\n    const classes = useStyles({selected});\n\n    return (\n        <Link to={`/${moduleId}/${courseId}`}  style={{textDecoration:\"none\"}}>\n            <MuListItem\n                button\n                className={classes.nested}\n            >\n                <ListItemIcon>\n                    <ListAltSharpIcon color={selected ? 'primary' : 'default'} />\n                </ListItemIcon>\n                <ListItemText\n                    primary={name}\n                    className={classes.listItemText}\n                />\n            </MuListItem>\n        </Link>\n    );\n}\n\nconst ListItem = ({item}) => {\n    const [open, setOpen] = useState(false);\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    return (\n        <>\n            <MuListItem\n                button\n                key={item?.id}\n                onClick={handleClick}\n            >\n                <ListItemIcon><MenuBookRounded /></ListItemIcon>\n                <ListItemText primary={item?.name} />\n                {open ? <ExpandLess /> : <ExpandMore />}\n            </MuListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    {\n                        item?.courses?.map((course, index) => (\n                            <CustomItem \n                                name={course.name}\n                                courseId={course.id}\n                                index={index}\n                                moduleId={item?.id}\n                            />\n                        ))\n                    }\n                </List>\n            </Collapse>\n        </>\n    );\n}\n\nexport default ListItem;","import {\n    Drawer as MuDrawer,\n    Divider,\n    List,\n} from '@material-ui/core';\nimport { Hidden } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DRAWER_WIDTH } from '../constant/ui';\nimport ListItem from './ListItem';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    drawerPaper: {\n        width: DRAWER_WIDTH,\n    },\n    toolbar: theme.mixins.toolbar,\n}));\n\nconst Drawer = ({ listItems, drawerOpen, toggleDrawer }) => {\n    const classes = useStyles();\n    const innerToggleDrawer = () => {\n        toggleDrawer(!drawerOpen)\n    }\n    return (\n        <>\n            <Hidden\n                mdDown\n            >\n                <MuDrawer\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.toolbar} />\n                    <Divider />\n                    <List>\n                        {listItems.map((item) => (\n                            <ListItem item={item} />\n                        ))}\n                    </List>\n                </MuDrawer>\n            </Hidden>\n            <Hidden\n                mdUp\n            >\n                <MuDrawer\n                    variant=\"temporary\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    open={drawerOpen}\n                    onClose={innerToggleDrawer}\n                >\n                    <div className={classes.toolbar} />\n                    <Divider />\n                    <List>\n                        {listItems.map((item) => (\n                            <ListItem item={item} />\n                        ))}\n                    </List>\n                </MuDrawer>\n            </Hidden>\n        </>\n    );\n}\n\nexport default Drawer;","export const DRAWER_WIDTH = 240;","import {\n    FormControlLabel,\n    Checkbox,\n    Typography,\n} from '@material-ui/core';\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\nimport { green, red } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        backgroundColor: props=> props.status === 'success' ? theme.palette.success.light : \n        (props.status === 'error' ? theme.palette.error.light : null),\n        width: '100%'\n    },\n    label: {\n        color: props=> props.status === 'success' ? theme.palette.success.main : \n        (props.status === 'error' ? theme.palette.error.main : null),\n    },\n    iconError: {\n        marginRight: theme.spacing(1),\n        color: red[600]\n    },\n    iconSuccess: {\n        marginRight: theme.spacing(1),\n        color: green[600]\n    }\n}));\n\nconst GreenCheckbox = withStyles({\n    root: {\n      color: green[400],\n      '&$checked': {\n        color: green[600],\n      },\n    },\n    checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst RedCheckbox = withStyles({\n    root: {\n      color: red[400],\n      '&$checked': {\n        color: red[600],\n      },\n    },\n    checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\n\nconst ResponseProposition = ({ label, status, index, checked, handleCheckProposition }) => {\n    const classes = useStyles({status});\n    const handleClick = () => {\n        handleCheckProposition({\n            checked:!checked,\n            index\n        })\n    }\n\n    const CustomCheckBox = status === 'success' ? <GreenCheckbox\n        checked={checked}\n        onChange={handleClick}\n    />\n        : (status === 'error' ? <RedCheckbox\n            checked={checked}\n            className={classes.iconError}\n        /> : <Checkbox\n            checked={checked}\n            onChange={handleClick}\n            color=\"primary\"\n        />)\n\n    return (\n        <FormControlLabel\n            control={\n                CustomCheckBox\n            }\n            label={<Typography className={classes.label}>{label}</Typography>}\n        />\n    );\n}\n\nexport default ResponseProposition;","import {\n    Typography,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    titleText: {\n        maxWidth: '90%',\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst CustomDialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose } = props;\n    return (\n        <DialogTitle disableTypography className={classes.root}>\n            <Typography\n                variant=\"h6\"\n                className={classes.titleText}\n            >\n                {children}\n            </Typography>\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                <CloseIcon />\n            </IconButton>\n        </DialogTitle>\n    );\n});\n\nconst CustomModal = ({\n    showSynthesis,\n    toggleModal,\n    modalTitle,\n    modalContent,\n}) => {\n\n    return (\n        <Dialog\n            open={showSynthesis}\n            onClose={toggleModal}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <CustomDialogTitle \n                id=\"simple-dialog-title\"\n                onClose={toggleModal}\n            >\n                {modalTitle}\n            </CustomDialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {modalContent}\n                </DialogContentText>\n            </DialogContent>\n        </Dialog>);\n}\n\nexport default CustomModal;","import { useState, useEffect } from 'react';\nimport {\n    Paper,\n    Typography,\n    Divider,\n    List,\n    ListItem,\n    Box,\n    Button,\n    ButtonGroup,\n} from '@material-ui/core';\nimport _ from 'lodash';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport { useParams } from 'react-router';\nimport { useStore } from '../../store/Store';\nimport { DRAWER_WIDTH } from '../../constant/ui';\nimport ResponseProposition from './ResponseProposition';\nimport CustomModal from '../Modal';\nimport { QUESTIONS_API } from '../../config/api';\n\n\n\nconst modalTitle = \"synthèse du cours\";\nconst modalContent = `Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.\nLorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.`;\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        [theme.breakpoints.up('md')]: {\n            marginTop: theme.spacing(4),\n            marginBottom: theme.spacing(4),\n            marginLeft: theme.spacing(4) + DRAWER_WIDTH,\n            marginRight: theme.spacing(4),\n        },\n        padding: theme.spacing(2)\n    },\n    divider: {\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    toolbar: theme.mixins.toolbar,\n    note: {\n        width: \"100%\",\n        marginTop: theme.spacing(4),\n    },\n    synthesisButton: {\n        height: 40,\n        paddingLeft: 12,\n        paddingRight: 12,\n        backgroundColor: theme.palette.grey[200],\n        borderRadius: 8,\n    },\n    synthesisButtonText: {\n        color: theme.palette.grey[800],\n        textTransform: 'none'\n    },\n    modalContainer: {\n        paddingTop: 20,\n        paddingBottom: 20,\n        maxHeight: '80vh',\n        position: 'absolute',\n        width: '50%',\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(2, 4, 3),\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        overflow: 'auto'\n    },\n}));\n\nconst Question = () => {\n    const classes = useStyles();\n    const [validated, setValidated] = useState(false);\n    const [showSynthesis, setShowSynthesis] = useState(false);\n    const [synthesis, setSynthesis] = useState('');\n    const [questions, setQuestions] = useState([]);\n    const [question, setQuestion] = useState({});\n    const [questionIndex, setQuestionIndex] = useState(0);\n    const [propositions, setPropositions] = useState([]);\n    const [globalState] = useStore();\n\n    const { moduleId, courseId } = useParams();\n    const URL = QUESTIONS_API({\n        moduleId, courseId  \n    });\n    let questionsString =''\n    let propositionsString =''\n    let questionString=''\n\n    useEffect(() => {\n        fetch(URL)\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                setQuestions([...data.questions])\n                questionsString = JSON.stringify([...data.questions])\n                const tab = [...data?.questions[questionIndex]?.propositions].map(\n                    (proposition)=>({\n                        ...proposition,\n                        label: proposition?.content,\n                        status: proposition?.is_correct ? 'success' : 'error',\n                        checked: false,\n                    })\n                );\n                setQuestion({...data.questions[questionIndex]})\n                setPropositions(tab)\n                setSynthesis(data?.synthesis)\n                propositionsString = JSON.stringify(tab)\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, [moduleId, courseId, questionsString, propositionsString, synthesis, questionIndex, questionString]);\n\n\n    const toggleModal = () => {\n        setShowSynthesis(!showSynthesis)\n    }\n\n    const handleCheckProposition = ({ index, checked }) => {\n        let tab = propositions;\n        tab[index].checked = checked;\n        setPropositions([...tab]);\n    }\n\n    const toggleValidation = () => {\n        setValidated(!validated)\n    }\n\n    const validateResponses = () => {\n        const valide = propositions.find((proposition) => (\n            (proposition.status === 'success' && !proposition.checked)\n            || (proposition.status === 'error' && proposition.checked)\n        ))\n        return _.isEmpty(valide);\n    }\n\n    return (\n        <>\n            <div className={classes.toolbar} />\n            <Paper className={classes.container}>\n                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n                    <Typography\n                        variant=\"h4\"\n                    >\n                        {`Question ${questionIndex+1}`}\n                    </Typography>\n                    <Button\n                        className={classes.synthesisButton}\n                        startIcon={<FullscreenIcon />}\n                        onClick={toggleModal}\n                    >\n                        <Typography className={classes.synthesisButtonText}>\n                            Synthèse\n                        </Typography>\n                    </Button>\n                </Box>\n                <Divider className={classes.divider} />\n                <Typography variant=\"subtitle1\">\n                    {\n                        question?.content\n                    }\n                </Typography>\n                <Divider className={classes.divider} />\n                {\n                    !validated\n                        ? null\n                        : validateResponses()\n                            ? <Alert severity=\"success\">Réponse juste!</Alert>\n                            : <Alert severity=\"error\">Réponse fausse!</Alert>\n                }\n\n                <List>\n                    {\n                        propositions.map((proposition, index) => (\n                            <ListItem>\n                                <ResponseProposition\n                                    label={proposition?.label}\n                                    status={validated ? proposition?.status : 'default'}\n                                    checked={proposition.checked}\n                                    index={index}\n                                    handleCheckProposition={handleCheckProposition}\n                                    propositions={propositions}\n                                />\n                            </ListItem>\n                        ))\n                    }\n                </List>\n                {validated && <>\n                    <Divider className={classes.divider} />\n                    <Typography\n                        variant=\"h6\"\n                    >\n                        Commentaire\n                    </Typography>\n                    <Typography variant=\"subtitle1\">\n                        {\n                            question?.comment\n                        }\n                    </Typography>\n                    <textarea\n                        className={classes.note}\n                        rows={10}\n                        placeholder=\"Vous pouvez ajoutez vos note ici ..\"\n                    >\n\n                    </textarea>\n                </>\n                }\n                <Divider className={classes.divider} />\n                <Box display=\"flex\" justifyContent=\"space-between\" m={1} p={1} bgcolor=\"background.paper\">\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={toggleValidation}\n                    >\n                        Valider\n                    </Button>\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n                        <Button\n                            onClick={()=>{\n                                setQuestionIndex(questionIndex-1)\n                            }}\n                            disabled={questionIndex===0}\n                        >\n                            Precedant\n                        </Button>\n                        <Button\n                            onClick={() => {\n                                setQuestionIndex(questionIndex+1)\n                            }}\n                            disabled={questionIndex===questions?.length-1}\n                        >\n                            Suivant\n                        </Button>\n                    </ButtonGroup>\n                </Box>\n            </Paper>\n            <CustomModal \n                showSynthesis={showSynthesis}\n                toggleModal={toggleModal}\n                modalTitle={modalTitle}\n                modalContent={synthesis}\n            />\n        </>\n    );\n}\n\nexport default Question;","export const MODULES_API = 'https://serie200-api.herokuapp.com/v1.0/module/';\nexport const QUESTIONS_API = ({ \n    moduleId, courseId \n}) =>`https://serie200-api.herokuapp.com/v1.0/module/${moduleId}/course/${courseId}/`;\n","import { useState } from 'react';\nimport {\n    useLocation,\n    Redirect\n} from \"react-router-dom\";\nimport '../App.css';\nimport Header from '../component/Header';\nimport Drawer from '../component/Drawer';\nimport Question from '../component/Question/Question';\nimport { useStore } from '../store/Store';\n\nfunction Home() {\n    const [drawerOpen, toggleDrawer] = useState(false);\n    const [globalState] = useStore();\n    const location = useLocation();\n\n    if (location.pathname === '/') {\n        if (globalState?.modules[0]?.id && globalState?.modules[0]?.courses[0]?.id){\n            return <Redirect to={`${globalState?.modules[0]?.id}/${globalState?.modules[0]?.courses[0]?.id}`} />\n        }\n    }\n    \n    return (\n        <div>\n            <Header\n                drawerOpen={drawerOpen}\n                toggleDrawer={toggleDrawer}\n            />\n            <Drawer\n                listItems={globalState.modules}\n                drawerOpen={drawerOpen}\n                toggleDrawer={toggleDrawer}\n            />\n            <Question />\n        </div>\n    );\n}\n\nexport default Home;\n","import { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { useStore } from './store/Store';\nimport { setModules } from './store/reducer';\nimport Home from './routes/home';\nimport { MODULES_API } from './config/api';\n\n\nfunction App() {\n  const [ ,dispatch] = useStore();\n  useEffect(() => {\n    fetch(MODULES_API)\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      dispatch(setModules(data))\n    })\n    .catch((error)=>{\n      console.log(error);\n    });\n  }, [])\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/:moduleId/:courseId\">\n          <Home />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StoreProvider } from './store/Store';\nimport { initialState, modulesReducer } from './store/reducer';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider initialState={initialState} reducer={modulesReducer}>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}